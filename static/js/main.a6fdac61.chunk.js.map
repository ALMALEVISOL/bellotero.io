{"version":3,"sources":["Navbar.js","Components/Testimonial.js","Components/Configurator.js","App.js","serviceWorker.js","index.js","logo.svg","img/bellotero.svg"],"names":["NavbarB","props","onSelectNavChange","selectedLink","setState","activeLink","currentTarget","pathname","substring","length","state","links","activeClassName","fetch","method","then","res","json","data","menu","this","items","bind","catch","error","notification","message","description","duration","Navbar","class","Brand","href","src","belloteroLogo","Nav","onSelect","selectedKey","map","item","to","route","onClick","className","text","React","Component","Testimonial","handleNextReview","initialCounter","slider","reviews","indexReview","title","name","position","comment","type","icon","ArrowLeftOutlined","ArrowRightOutlined","Configurator","calculator","handleMonthlyIngredientChange","value","inputValue","foodCost","toFixed","annualSavings","employeesValue","handleFullTimeEmployeesChange","span","min","max","style","margin","step","onChange","formatter","replace","width","App","Fragment","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.a6fdac61.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport { notification } from 'antd';\r\nimport belloteroLogo from \"./img/bellotero.svg\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    NavLink\r\n  } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nexport default class NavbarB extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            links: [],\r\n            activeClassName: \"nav-item-active\",\r\n            activeLink: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        let menuItemsUrl = \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/app.json\"\r\n        fetch(menuItemsUrl, {\r\n            method: \"GET\",\r\n          }).then(function (res) {\r\n            return res.json();\r\n          }).then( function (data) {\r\n              if (data && data.menu ) {\r\n                  this.setState({\r\n                      links: data.menu.items\r\n                  })\r\n              }\r\n        }.bind(this)).catch(function (error) {\r\n            notification.error({\r\n                message: \"Error\",\r\n                description:\r\n                  \"¡Ocurrió un error al intentar conectarse con el servidor!\",\r\n                duration: 10\r\n              });\r\n            });\r\n    }\r\n\r\n    onSelectNavChange = selectedLink => {\r\n        this.setState({\r\n            activeLink: selectedLink.currentTarget.pathname.substring( 1,  selectedLink.currentTarget.pathname.length)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar class=\"navbar\">\r\n                <Navbar>\r\n                    <Navbar.Brand href=\"#home\">\r\n                        <img src={belloteroLogo} class=\"bellotero\" />\r\n                    </Navbar.Brand>\r\n                </Navbar>\r\n               \r\n                <Nav  onSelect={ (selectedKey) => this.onSelectNavChange(selectedKey)    }>\r\n                    {this.state.links && this.state.links.map( item => {\r\n                        return <NavLink to={item.route} onClick={ (selectedKey) => this.onSelectNavChange(selectedKey)    } activeClassName={this.state.activeLink === item.route ? this.state.activeClassName : \"\" }   className={\"nav-item\"}  >\r\n                        { item.text } \r\n                      </NavLink>\r\n                    })}\r\n                </Nav>\r\n                \r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { notification, Button } from 'antd';\r\nimport {\r\n    ArrowRightOutlined,\r\n    ArrowLeftOutlined\r\n  } from '@ant-design/icons';\r\nimport \"./Testimonial.css\";\r\n\r\nexport default class Testimonial extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            slider: null,\r\n            initialCounter: 1,\r\n            indexReview: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        let menuItemsUrl = \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/page1.json\"\r\n        fetch(menuItemsUrl, {\r\n            method: \"GET\",\r\n          }).then(function (res) {\r\n            return res.json();\r\n          }).then( function (data) {\r\n              if (data && data.slider ) {\r\n                  this.setState({\r\n                      slider: data.slider\r\n                  })\r\n              }\r\n        }.bind(this)).catch(function (error) {\r\n            notification.error({\r\n                message: \"Error\",\r\n                description:\r\n                  \"¡Ocurrió un error al intentar conectarse con el servidor!\",\r\n                duration: 10\r\n              });\r\n            });\r\n    }\r\n\r\n    handleNextReview = () => {\r\n        if( this.state.initialCounter < this.state.slider.reviews.length ){\r\n            this.setState({\r\n                initialCounter: this.state.initialCounter + 1,\r\n                indexReview: this.state.indexReview + 1\r\n            })\r\n        }else{\r\n            this.setState({\r\n                initialCounter: 1,\r\n                indexReview: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"testimonial-title\">\r\n                    <div className={\"Our-customers-love-u\"}>{ this.state.slider && this.state.slider.title }</div>\r\n                </div>\r\n\r\n                <div className=\"testimonial-reviews\">\r\n                    <span className={\"testimonial-name\"}  >{ this.state.slider && this.state.slider.reviews !== null && this.state.slider.reviews[this.state.indexReview].name }</span>\r\n                    <span className={\"testimonial-position\"} >{ this.state.slider && this.state.slider.reviews !== null && this.state.slider.reviews[this.state.indexReview].position }</span>\r\n                    <div className={\"testimonial-comment\"} >{ this.state.slider && this.state.slider.reviews !== null && this.state.slider.reviews[this.state.indexReview].comment }</div>\r\n                </div>\r\n\r\n                <div className={\"number-of-reviews\"}>\r\n                    <span className={\"counter\"}>  { this.state.initialCounter + \"/\" + (this.state.slider && this.state.slider.reviews !== null ? this.state.slider.reviews.length : \"\") }  </span>\r\n                </div>\r\n\r\n                \r\n                <Button type=\"primary\"   className={\"button-left\"} onClick={this.handleNextReview} icon={<ArrowLeftOutlined />} />\r\n                <Button type=\"primary\"   className={\"button-right\"} onClick={this.handleNextReview} icon={<ArrowRightOutlined />} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Slider, InputNumber, Row, Col, notification, Button } from 'antd';\r\nimport \"./Configurator.css\";\r\nimport 'antd/dist/antd.css';\r\n\r\nexport default class Configurator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputValue: 1,\r\n            employeesValue: 1,\r\n            foodCost: 0,\r\n            annualSavings: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        let menuItemsUrl = \"https://raw.githubusercontent.com/Bernabe-Felix/Bellotero/master/page2.json\"\r\n        fetch(menuItemsUrl, {\r\n            method: \"GET\",\r\n          }).then(function (res) {\r\n            return res.json();\r\n          }).then( function (data) {\r\n              if (data && data.calculator ) {\r\n                  this.setState({\r\n                      calculator: data.calculator\r\n                  })\r\n              }\r\n        }.bind(this)).catch(function (error) {\r\n            notification.error({\r\n                message: \"Error\",\r\n                description:\r\n                  \"¡Ocurrió un error al intentar conectarse con el servidor!\",\r\n                duration: 10\r\n              });\r\n            });\r\n    }\r\n\r\n    handleNextReview = () => {\r\n        if( this.state.initialCounter < this.state.calculator.reviews.length ){\r\n            this.setState({\r\n                initialCounter: this.state.initialCounter + 1,\r\n                indexReview: this.state.indexReview + 1\r\n            })\r\n        }else{\r\n            this.setState({\r\n                initialCounter: 1,\r\n                indexReview: 0\r\n            })\r\n        }\r\n    }\r\n\r\n    handleMonthlyIngredientChange = value => {\r\n        this.setState({\r\n            inputValue: value,\r\n            foodCost: (value * 0.3).toFixed(3),\r\n            annualSavings: (this.state.employeesValue * 1337 + ( value * 0.3 )).toFixed(3)\r\n        });\r\n    };\r\n\r\n    handleFullTimeEmployeesChange = value => {\r\n        this.setState({\r\n            employeesValue: value,\r\n            foodCost: (this.state.inputValue * 0.3).toFixed(3),\r\n            annualSavings: (value * 1337 + ( this.state.inputValue * 0.3 )).toFixed(3)\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { inputValue } = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"calculator-title\">\r\n                    <div className={\"Our-customers-love-u\"}>{ this.state.calculator && this.state.calculator.title }</div>\r\n                </div>\r\n\r\n                <div className=\"With-Belloteroio-yo\">\r\n                    <span className={\"calculator-description\"} >{ this.state.calculator && this.state.calculator.description  }</span>\r\n                </div>\r\n \r\n\r\n                <Row className={\"monthly-ingredient\"} >\r\n                    <Col span={6}>\r\n                        <span className={\"Monthly-ingredient-s\"} > Monthly ingredient spending  </span>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                        <InputNumber\r\n                            min={10}\r\n                            max={100}\r\n                            style={{ margin: '0 16px' }}\r\n                            step={0.001}\r\n                            value={inputValue}\r\n                            onChange={this.onChange}\r\n                            className={\"ingredient-number input-number-ingredient\"}\r\n                            formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n                        />\r\n                    </Col>\r\n                    <Slider\r\n                        style={{width: \"535px\", }}\r\n                        min={10}\r\n                        max={100}\r\n                        onChange={this.handleMonthlyIngredientChange }\r\n                        value={typeof inputValue === 'number' ? inputValue : 0}\r\n                    />\r\n                </Row>\r\n                \r\n\r\n                <Row className={\"employees\"} >\r\n                    <Col span={10}>\r\n                        <span className={\"Full-time-employees\"} >Full-time employees that process invoices</span>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <InputNumber\r\n                            min={1}\r\n                            max={10}\r\n                            style={{ margin: '0 16px' }}\r\n                            className={\"input-number-employees\"}\r\n                            value={this.state.employeesValue}  \r\n                            onChange={this.onChange}\r\n                        />\r\n                    </Col>\r\n                    <Slider\r\n                        style={{width: \"535px\" }}\r\n                        min={1}\r\n                        max={10}\r\n                        onChange={this.handleFullTimeEmployeesChange }\r\n                        className={\"employees-slider\"}\r\n                        value={typeof this.state.employeesValue === 'number' ? this.state.employeesValue : 0}\r\n                    />\r\n                </Row>\r\n\r\n\r\n                <Row className={\"results\"} >\r\n                    <Col span={10}>\r\n                        <span  className={\"results-text estimated-annual\"}> $ { this.state.foodCost }  </span>\r\n                        <span  className={\"results-text-cost-food-label\"} > Estimated cost food savings  </span>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <span className={\"results-text\"} >  $ { this.state.annualSavings }  </span>\r\n                        <span className={\"results-text-estimated-label\"} >  Your estimated annual savings  </span>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport NavbarB from \"./Navbar\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport Testimonial from './Components/Testimonial';\nimport Configurator from './Components/Configurator';\n\nfunction App() {\n  return (\n\n\n    <React.Fragment>\n      <Router>\n          <NavbarB /> \n          <Switch>\n            <Route path=\"/page-1\">\n              <Testimonial />\n            </Route>\n            <Route path=\"/page-2\">\n              <Configurator />\n            </Route>\n          </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/bellotero.2e7b3396.svg\";"],"sourceRoot":""}